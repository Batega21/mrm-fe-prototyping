{"version":3,"names":[],"mappings":"","sources":["build.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _main = require('./main.js');\n\nvar _main2 = _interopRequireDefault(_main);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = new _main2.default(); // Es posible usar todas las funcionalidades de ES6\n// http://es6-features.org/\n// \n// Babel transpila nuestro codigo fuente a la versión\n// de JS soportada por los navegadores actuales.\n// \n// Aún asi, gulp-sourcemaps nos permite debuguear el código\n// fuente original sin transpilar ;)\n// \n// Se recomienda que el index.js sea un lugar para importar \n// los modulos principales de la aplicacion e inicializar.\n\n},{\"./main.js\":2}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils.js');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Main = function () {\n  function Main() {\n    _classCallCheck(this, Main);\n\n    this.unaPropiedad = (0, _utils.unaFuncion)();\n    this.unMetodo();\n  }\n\n  _createClass(Main, [{\n    key: 'unMetodo',\n    value: function unMetodo() {\n      console.log('Bienvenidos a: ' + this.unaPropiedad);\n    }\n  }]);\n\n  return Main;\n}();\n\nexports.default = Main;\n\n},{\"./utils.js\":3}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction unaFuncion() {\n    return \"\\n  ______  _____   __  \\n |  ____|/ ____| / /  \\n | |__  | (___  / /_  \\n |  __|  \\\\___ \\\\| '_ \\\\ \\n | |____ ____) | (_) |\\n |______|_____/ \\\\___/ \\n                      \\n\";\n}\nexports.unaFuncion = unaFuncion;\n\n},{}]},{},[1]);\n"],"file":"build.js"}